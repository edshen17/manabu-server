"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.users = void 0;
const express_1 = __importDefault(require("express"));
const getAppointmentsController_1 = require("../../../../components/controllers/appointment/getAppointmentsController");
const getAvailableTimesController_1 = require("../../../../components/controllers/availableTime/getAvailableTimesController");
const createUserController_1 = require("../../../../components/controllers/user/createUserController");
const editUserController_1 = require("../../../../components/controllers/user/editUserController");
const getUserController_1 = require("../../../../components/controllers/user/getUserController");
const getUserTeacherEdgesController_1 = require("../../../../components/controllers/user/getUserTeacherEdgesController");
const expressCallback_1 = require("../../../../components/webFrameworkCallbacks/callbacks/expressCallback");
const index_1 = require("./auth/index");
const self_1 = require("./self");
const users = express_1.default.Router();
exports.users = users;
users.get('/:userId', expressCallback_1.makeJSONCookieExpressCallback.consume(getUserController_1.makeGetUserController));
users.get('/:userId/availableTimes', expressCallback_1.makeJSONExpressCallback.consume(getAvailableTimesController_1.makeGetAvailableTimesController));
users.get('/:userId/appointments', expressCallback_1.makeJSONExpressCallback.consume(getAppointmentsController_1.makeGetAppointmentsController));
users.get('/:userId/userTeacherEdges', expressCallback_1.makeJSONExpressCallback.consume(getUserTeacherEdgesController_1.makeGetUserTeacherEdgesController));
users.patch('/:userId', expressCallback_1.makeJSONExpressCallback.consume(editUserController_1.makeEditUserController));
users.post('/', expressCallback_1.makeJSONCookieExpressCallback.consume(createUserController_1.makeCreateUserController));
users.use('/auth', index_1.auth);
users.use('/self', self_1.self);
