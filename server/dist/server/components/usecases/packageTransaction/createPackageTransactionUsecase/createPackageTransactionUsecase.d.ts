import { AppointmentDoc } from '../../../../models/Appointment';
import { BalanceTransactionDoc } from '../../../../models/BalanceTransaction';
import { IncomeReportDoc } from '../../../../models/IncomeReport';
import { PackageTransactionDoc } from '../../../../models/PackageTransaction';
import { JoinedUserDoc } from '../../../../models/User';
import { CacheDbService } from '../../../dataAccess/services/cache/cacheDbService';
import { GraphDbService } from '../../../dataAccess/services/graph/graphDbService';
import { PackageTransactionDbServiceResponse } from '../../../dataAccess/services/packageTransaction/packageTransactionDbService';
import { TeacherDbService } from '../../../dataAccess/services/teacher/teacherDbService';
import { UserDbService } from '../../../dataAccess/services/user/userDbService';
import { PackageTransactionEntity } from '../../../entities/packageTransaction/packageTransactionEntity';
import { AbstractCreateUsecase } from '../../abstractions/AbstractCreateUsecase';
import { MakeRequestTemplateParams } from '../../abstractions/AbstractUsecase';
import { CreateAppointmentsUsecase } from '../../appointment/createAppointmentsUsecase/createAppointmentsUsecase';
import { CreateBalanceTransactionsUsecase } from '../../balanceTransaction/createBalanceTransactionsUsecase/createBalanceTransactionsUsecase';
import { CreateIncomeReportUsecase } from '../../incomeReport/createIncomeReportUsecase/createIncomeReportUsecase';
import { ControllerDataBuilder } from '../../utils/controllerDataBuilder/controllerDataBuilder';
import { EmailHandler } from '../../utils/emailHandler/emailHandler';
import { ExchangeRateHandler } from '../../utils/exchangeRateHandler/exchangeRateHandler';
import { JwtHandler } from '../../utils/jwtHandler/jwtHandler';
declare type OptionalCreatePackageTransactionUsecaseInitParams = {
    makeJwtHandler: Promise<JwtHandler>;
    makeCacheDbService: Promise<CacheDbService>;
    makePackageTransactionEntity: Promise<PackageTransactionEntity>;
    makeUserDbService: Promise<UserDbService>;
    makeExchangeRateHandler: Promise<ExchangeRateHandler>;
    makeCreateBalanceTransactionsUsecase: Promise<CreateBalanceTransactionsUsecase>;
    makeCreateIncomeReportUsecase: Promise<CreateIncomeReportUsecase>;
    makeControllerDataBuilder: ControllerDataBuilder;
    makeEmailHandler: Promise<EmailHandler>;
    makeCreateAppointmentsUsecase: Promise<CreateAppointmentsUsecase>;
    makeGraphDbService: Promise<GraphDbService>;
    makeTeacherDbService: Promise<TeacherDbService>;
};
declare type CreatePackageTransactionUsecaseResponse = {
    packageTransaction: PackageTransactionDoc;
    balanceTransactions: BalanceTransactionDoc[];
    incomeReport: IncomeReportDoc;
    appointments: AppointmentDoc[];
    user: JoinedUserDoc;
};
declare class CreatePackageTransactionUsecase extends AbstractCreateUsecase<OptionalCreatePackageTransactionUsecaseInitParams, CreatePackageTransactionUsecaseResponse, PackageTransactionDbServiceResponse> {
    private _jwtHandler;
    private _cacheDbService;
    private _packageTransactionEntity;
    private _userDbService;
    private _exchangeRateHandler;
    private _createBalanceTransactionsUsecase;
    private _createIncomeReportUsecase;
    private _controllerDataBuilder;
    private _emailHandler;
    private _createAppointmentsUsecase;
    private _graphDbService;
    private _teacherDbService;
    protected _makeRequestTemplate: (props: MakeRequestTemplateParams) => Promise<CreatePackageTransactionUsecaseResponse>;
    private _getCreatePackageTransactionUsecaseRes;
    private _getVerifiedJwt;
    private _createPackageTransaction;
    private _createStudentTeacherEdge;
    private _createAppointments;
    private _getAppointmentsControllerData;
    private _createBalanceTransactions;
    private _getUserDataFromPackageTransaction;
    private _getBalanceTransactionsControllerData;
    private _getBalanceTransactionBatchBuildParams;
    private _createDebitBalanceTransactionEntityBuildParams;
    private _createCreditBalanceTransactionEntityBuildParams;
    private _createDebitTeacherBalanceTransactionEntityBuildParams;
    private _getTeacherProcessingFee;
    private _getTeacherTotalAvailableBalance;
    private _sendPackageTransactionCreationEmails;
    private _sendStudentPackageTransactionCreationEmail;
    private _sendTeacherPackageTransactionCreationEmail;
    private _editTeacherPendingBalance;
    private _createIncomeReport;
    private _getIncomeReportControllerData;
    protected _initTemplate: (optionalInitParams: OptionalCreatePackageTransactionUsecaseInitParams) => Promise<void>;
}
export { CreatePackageTransactionUsecase, CreatePackageTransactionUsecaseResponse };
